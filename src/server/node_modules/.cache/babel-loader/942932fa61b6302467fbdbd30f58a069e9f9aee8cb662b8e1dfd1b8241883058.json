{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sirip\\\\Desktop\\\\contentql\\\\contenttt\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport TodoForm from './TodoForm';\nimport TodoList from './TodoList';\nimport axios from 'axios';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://localhost:3000/api/todos';\nfunction App() {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const [authenticated, setAuthenticated] = useState(false);\n  useEffect(() => {\n    fetchTodos();\n    // Check if user is authenticated on component mount\n    checkAuthentication();\n  }, []);\n  const fetchTodos = async () => {\n    try {\n      const response = await axios.get(API_BASE_URL);\n      setTodos(response.data);\n    } catch (error) {\n      console.error('Error fetching todos:', error);\n    }\n  };\n  const checkAuthentication = async () => {\n    // Check if user is authenticated\n    // Implement logic to check authentication using Payload CMS\n    // Update authenticated state accordingly\n    setAuthenticated(true); // For demonstration purposes; replace with actual authentication logic\n  };\n  const handleLogin = async credentials => {\n    // Implement login logic using Payload CMS\n    // Update authenticated state if login is successful\n    setAuthenticated(true); // For demonstration purposes; replace with actual login logic\n  };\n  const handleLogout = async () => {\n    // Implement logout logic using Payload CMS\n    // Update authenticated state if logout is successful\n    setAuthenticated(false); // For demonstration purposes; replace with actual logout logic\n  };\n  const handleAddTodo = async newTodo => {\n    try {\n      const response = await axios.post(API_BASE_URL, newTodo);\n      setTodos([...todos, response.data]);\n    } catch (error) {\n      console.error('Error adding todo:', error);\n    }\n  };\n  const handleDeleteTodo = async id => {\n    try {\n      await axios.delete(`${API_BASE_URL}/${id}`);\n      setTodos(todos.filter(todo => todo.id !== id));\n    } catch (error) {\n      console.error('Error deleting todo:', error);\n    }\n  };\n  const handleUpdateTodo = async (id, updatedTodo) => {\n    try {\n      const response = await axios.put(`${API_BASE_URL}/${id}`, updatedTodo);\n      const updatedTodos = todos.map(todo => todo.id === id ? response.data : todo);\n      setTodos(updatedTodos);\n    } catch (error) {\n      console.error('Error updating todo:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    \"align-items\": \"center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todo App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), authenticated ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TodoForm, {\n        onSubmit: handleAddTodo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n        todos: todos,\n        onDelete: handleDeleteTodo,\n        onUpdate: handleUpdateTodo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(LoginForm, {\n      onLogin: handleLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"OPwZKP5VVMfgJMNVm5yFHmP9sQ8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","TodoForm","TodoList","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","API_BASE_URL","App","_s","todos","setTodos","authenticated","setAuthenticated","fetchTodos","checkAuthentication","response","get","data","error","console","handleLogin","credentials","handleLogout","handleAddTodo","newTodo","post","handleDeleteTodo","id","delete","filter","todo","handleUpdateTodo","updatedTodo","put","updatedTodos","map","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","onDelete","onUpdate","LoginForm","onLogin","_c","$RefreshReg$"],"sources":["C:/Users/sirip/Desktop/contentql/contenttt/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport TodoForm from './TodoForm';\nimport TodoList from './TodoList';\nimport axios from 'axios';\nimport './App.css';\n\nconst API_BASE_URL = 'http://localhost:3000/api/todos';\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n  const [authenticated, setAuthenticated] = useState(false);\n\n  useEffect(() => {\n    fetchTodos();\n    // Check if user is authenticated on component mount\n    checkAuthentication();\n  }, []);\n\n  const fetchTodos = async () => {\n    try {\n      const response = await axios.get(API_BASE_URL);\n      setTodos(response.data);\n    } catch (error) {\n      console.error('Error fetching todos:', error);\n    }\n  };\n\n  const checkAuthentication = async () => {\n    // Check if user is authenticated\n    // Implement logic to check authentication using Payload CMS\n    // Update authenticated state accordingly\n    setAuthenticated(true); // For demonstration purposes; replace with actual authentication logic\n  };\n\n  const handleLogin = async (credentials) => {\n    // Implement login logic using Payload CMS\n    // Update authenticated state if login is successful\n    setAuthenticated(true); // For demonstration purposes; replace with actual login logic\n  };\n\n  const handleLogout = async () => {\n    // Implement logout logic using Payload CMS\n    // Update authenticated state if logout is successful\n    setAuthenticated(false); // For demonstration purposes; replace with actual logout logic\n  };\n\n  const handleAddTodo = async (newTodo) => {\n    try {\n      const response = await axios.post(API_BASE_URL, newTodo);\n      setTodos([...todos, response.data]);\n    } catch (error) {\n      console.error('Error adding todo:', error);\n    }\n  };\n\n  const handleDeleteTodo = async (id) => {\n    try {\n      await axios.delete(`${API_BASE_URL}/${id}`);\n      setTodos(todos.filter(todo => todo.id !== id));\n    } catch (error) {\n      console.error('Error deleting todo:', error);\n    }\n  };\n\n  const handleUpdateTodo = async (id, updatedTodo) => {\n    try {\n      const response = await axios.put(`${API_BASE_URL}/${id}`, updatedTodo);\n      const updatedTodos = todos.map(todo => (todo.id === id ? response.data : todo));\n      setTodos(updatedTodos);\n    } catch (error) {\n      console.error('Error updating todo:', error);\n    }\n  };\n\n  return (\n    <div className=\"App\" align-items=\"center\">\n      <h1>Todo App</h1>\n      {authenticated ? (\n        <>\n          <button onClick={handleLogout}>Logout</button>\n          <TodoForm onSubmit={handleAddTodo} />\n          <TodoList todos={todos} onDelete={handleDeleteTodo} onUpdate={handleUpdateTodo} />\n        </>\n      ) : (\n        <LoginForm onLogin={handleLogin} />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}